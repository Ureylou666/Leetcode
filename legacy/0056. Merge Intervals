class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length == 1) return intervals;
        List<Integer> left = new ArrayList<>();
        List<Integer> right = new ArrayList<>();
        Arrays.sort(intervals, (a,b) -> { return (a[0] - b[0]); });
        left.add(intervals[0][0]);
        right.add(intervals[0][1]);
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0] > right.getLast()) {
                left.add(intervals[i][0]);
                right.add(intervals[i][1]);
            } else if (intervals[i][1] > right.getLast()) {
                right.removeLast();
                right.add(intervals[i][1]);
            }
        }
        int[][] result = new int[left.size()][2];
        for (int i = 0; i<left.size(); i++) {
            result[i][0] = left.get(i);
            result[i][1] = right.get(i);
        }
        return result;
    }
}