public static int rob(int[] nums) {
        int[] dp = new int[nums.length];
        int max = 0;
        dp[0] = nums[0];
        if (nums.length > 1) dp[1] = Math.max(dp[0],nums[1]); else return dp[0];
        for (int i = 2; i<nums.length-1; i++) dp[i] = Math.max( dp[i-2]+nums[i], dp[i-1] );
        max = dp[nums.length-2];
        Arrays.fill(dp, 0);
        dp[1] = nums[1];
        if (nums.length > 3) dp[2] = Math.max(dp[1],nums[2]); else if (nums.length == 2) return Math.max(nums[0],nums[1]); else return Math.max(nums[0], Math.max(nums[1], nums[2]));
        for (int i = 3; i<nums.length; i++) dp[i] = Math.max( dp[i-2]+nums[i], dp[i-1] );
        return Math.max(max, dp[nums.length-1]);
    }