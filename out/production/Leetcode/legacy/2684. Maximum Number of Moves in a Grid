 public static int maxMoves(int[][] grid) {
        int m = grid.length, n = grid[0].length;
        int[][] dp = new int[m][n];
        for (int i =0;i<m;i++) dp[i][n-1] = 1;
        for (int j = n-2; j>=0; j--)
            for (int i=0; i<m; i++) {
                dp[i][j] = 1;
                int max = 0;
                if (i>0)
                    if (grid[i][j] < grid[i-1][j+1]) max = Math.max(max, dp[i-1][j+1]);
                if (i<m-1)
                    if (grid[i][j] < grid[i+1][j+1]) max = Math.max(max, dp[i+1][j+1]);
                if (grid[i][j] < grid[i][j+1]) max = Math.max(max,dp[i][j+1]);
                dp[i][j] += max;
            }
        int result = 0;
        for (int i = 0;i<m;i++) result = Math.max(result, dp[i][0]);
        return result;
    }