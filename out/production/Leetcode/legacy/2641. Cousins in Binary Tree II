/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static TreeNode replaceValueInTree(TreeNode root) {
        List<Integer> levelSum = new ArrayList<>();
        calcSum(root, 0, levelSum);
        setNewValue(root, 0, levelSum);
        root.val = 0;
        return root;
    }

    public static void calcSum(TreeNode root, int level, List<Integer> levelSum) {
        if (root == null) return;
        if (levelSum.size() == level) levelSum.add(root.val); else levelSum.set(level, levelSum.get(level)+root.val);
        calcSum(root.left, level+1, levelSum);
        calcSum(root.right, level+1, levelSum);
    }

    public static void setNewValue(TreeNode root, int level, List<Integer> levelSum) {
        if (root == null) return;
        int left = 0 , right = 0;
        if (root.left != null) left = root.left.val;
        if (root.right != null) right = root.right.val;
        if (root.left != null) root.left.val = levelSum.get(level+1) - left - right;
        if (root.right != null) root.right.val = levelSum.get(level+1) - left - right;
        setNewValue(root.left, level+1, levelSum);
        setNewValue(root.right, level+1, levelSum);
    }
}